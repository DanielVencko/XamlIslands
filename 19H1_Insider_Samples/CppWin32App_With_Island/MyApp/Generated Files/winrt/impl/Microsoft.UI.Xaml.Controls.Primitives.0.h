// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.190111.3

#pragma once

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls {

enum class ChainingMode;
enum class ColorPickerHsvChannel;
enum class ColorSpectrumComponents;
enum class ColorSpectrumShape;
enum class ContentOrientation;
enum class InputKind : unsigned;
enum class InteractionState;
enum class RailingMode;
enum class ScrollMode;
enum class ZoomMode;
struct ColorChangedEventArgs;
struct ScrollAnimationStartingEventArgs;
struct ScrollCompletedEventArgs;
struct ScrollInfo;
struct ScrollOptions;
struct ScrollerAnchorRequestedEventArgs;
struct ScrollerBringingIntoViewEventArgs;
struct ZoomAnimationStartingEventArgs;
struct ZoomCompletedEventArgs;
struct ZoomInfo;
struct ZoomOptions;

}

WINRT_EXPORT namespace winrt::Windows::UI {

struct Color;

}

WINRT_EXPORT namespace winrt::Windows::UI::Composition {

struct CompositionAnimation;
struct CompositionPropertySet;
struct Visual;

}

WINRT_EXPORT namespace winrt::Windows::UI::Input {

struct PointerPoint;

}

WINRT_EXPORT namespace winrt::Windows::UI::Xaml {

struct DependencyProperty;
struct UIElement;

}

WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Controls {

enum class Orientation;
struct IconElement;

}

WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Media {

struct Brush;

}

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls::Primitives {

enum class ScrollSnapPointsAlignment : int32_t
{
    Near = 0,
    Center = 1,
    Far = 2,
};

struct IColorPickerSlider;
struct IColorPickerSliderFactory;
struct IColorPickerSliderStatics;
struct IColorSpectrum;
struct IColorSpectrumFactory;
struct IColorSpectrumStatics;
struct ICommandBarFlyoutCommandBar;
struct ICommandBarFlyoutCommandBarFactory;
struct ICommandBarFlyoutCommandBarTemplateSettings;
struct INavigationViewItemPresenter;
struct INavigationViewItemPresenterFactory;
struct INavigationViewItemPresenterStatics;
struct IRadioButtonsListView;
struct IRadioButtonsListViewFactory;
struct IRadioButtonsListViewItem;
struct IRadioButtonsListViewItemFactory;
struct IRepeatedScrollSnapPoint;
struct IRepeatedScrollSnapPointFactory;
struct IRepeatedZoomSnapPoint;
struct IRepeatedZoomSnapPointFactory;
struct IScrollController;
struct IScrollControllerInteractionRequestedEventArgs;
struct IScrollControllerInteractionRequestedEventArgsFactory;
struct IScrollControllerScrollByRequestedEventArgs;
struct IScrollControllerScrollByRequestedEventArgsFactory;
struct IScrollControllerScrollFromRequestedEventArgs;
struct IScrollControllerScrollFromRequestedEventArgsFactory;
struct IScrollControllerScrollToRequestedEventArgs;
struct IScrollControllerScrollToRequestedEventArgsFactory;
struct IScrollSnapPoint;
struct IScrollSnapPointBase;
struct IScrollSnapPointBaseFactory;
struct IScrollSnapPointFactory;
struct IScroller;
struct IScrollerFactory;
struct IScrollerStatics;
struct ISnapPointBase;
struct ISnapPointBaseFactory;
struct IZoomSnapPoint;
struct IZoomSnapPointBase;
struct IZoomSnapPointBaseFactory;
struct IZoomSnapPointFactory;
struct ColorPickerSlider;
struct ColorSpectrum;
struct CommandBarFlyoutCommandBar;
struct CommandBarFlyoutCommandBarTemplateSettings;
struct NavigationViewItemPresenter;
struct RadioButtonsListView;
struct RadioButtonsListViewItem;
struct RepeatedScrollSnapPoint;
struct RepeatedZoomSnapPoint;
struct ScrollControllerInteractionRequestedEventArgs;
struct ScrollControllerScrollByRequestedEventArgs;
struct ScrollControllerScrollFromRequestedEventArgs;
struct ScrollControllerScrollToRequestedEventArgs;
struct ScrollSnapPoint;
struct ScrollSnapPointBase;
struct Scroller;
struct SnapPointBase;
struct ZoomSnapPoint;
struct ZoomSnapPointBase;

}

namespace winrt::impl {

template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListView>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItem>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItemFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPoint>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPointFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPoint>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPointFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgs>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgsFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgs>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgsFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgs>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgsFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgs>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgsFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPoint>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBase>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBaseFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScroller>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IScrollerStatics>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBase>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBaseFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPoint>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBase>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBaseFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListView>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListViewItem>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::RepeatedScrollSnapPoint>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::RepeatedZoomSnapPoint>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerInteractionRequestedEventArgs>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollByRequestedEventArgs>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollFromRequestedEventArgs>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollToRequestedEventArgs>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPoint>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointBase>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::Scroller>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::SnapPointBase>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPoint>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPointBase>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment>{ using type = enum_category; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSlider" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IColorPickerSliderStatics" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrum" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IColorSpectrumStatics" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBar" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ICommandBarFlyoutCommandBarTemplateSettings" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenter" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.INavigationViewItemPresenterStatics" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListView>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListView" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListViewFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItem>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListViewItem" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItemFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRadioButtonsListViewItemFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRepeatedScrollSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPointFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRepeatedScrollSnapPointFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRepeatedZoomSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPointFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IRepeatedZoomSnapPointFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollController" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgsFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerInteractionRequestedEventArgsFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollByRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgsFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollByRequestedEventArgsFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollFromRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgsFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollFromRequestedEventArgsFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollToRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgsFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollControllerScrollToRequestedEventArgsFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBase>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointBase" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBaseFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointBaseFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollSnapPointFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScroller>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScroller" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IScrollerStatics>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IScrollerStatics" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBase>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ISnapPointBase" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBaseFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ISnapPointBaseFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBase>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointBase" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBaseFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointBaseFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.IZoomSnapPointFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ColorPickerSlider" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ColorSpectrum" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBar" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.CommandBarFlyoutCommandBarTemplateSettings" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.NavigationViewItemPresenter" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListView>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListView" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListViewItem>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.RadioButtonsListViewItem" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::RepeatedScrollSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.RepeatedScrollSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::RepeatedZoomSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.RepeatedZoomSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerInteractionRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerInteractionRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollByRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollByRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollFromRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollFromRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollToRequestedEventArgs>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ScrollControllerScrollToRequestedEventArgs" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointBase>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointBase" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::Scroller>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.Scroller" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::SnapPointBase>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.SnapPointBase" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPoint>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPoint" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPointBase>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ZoomSnapPointBase" }; };
template <> struct name<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Controls.Primitives.ScrollSnapPointsAlignment" }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>{ static constexpr guid value{ 0x456231BB,0x5A4C,0x564B,{ 0x9B,0x3D,0x2F,0x15,0x70,0x61,0xA0,0xF8 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>{ static constexpr guid value{ 0xD0CB1F0E,0x0771,0x5C7D,{ 0xBA,0x14,0xAA,0x43,0x11,0x79,0xB2,0xAC } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>{ static constexpr guid value{ 0x9792B197,0xC864,0x59F3,{ 0x9F,0xA0,0xE2,0x1C,0x7F,0xD4,0x6B,0x79 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>{ static constexpr guid value{ 0x75305916,0x882D,0x5667,{ 0xBF,0xD0,0x0A,0xF7,0x2D,0x50,0x2D,0x72 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>{ static constexpr guid value{ 0xEFECD442,0x8C2A,0x50A6,{ 0x88,0xA3,0x39,0x99,0xEA,0x01,0xF0,0x96 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>{ static constexpr guid value{ 0xAA1D251D,0x9E7B,0x5767,{ 0xAD,0xB9,0xFC,0xD3,0x68,0x55,0xD8,0x2E } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>{ static constexpr guid value{ 0x0F7120C5,0x6D00,0x5489,{ 0x91,0x71,0xBE,0xDD,0x2D,0x4E,0xF6,0x77 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>{ static constexpr guid value{ 0x58DBCDA9,0x38E4,0x5EFC,{ 0xB7,0x40,0x26,0xFD,0xA3,0xD0,0xA3,0xC6 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>{ static constexpr guid value{ 0x533CC5CA,0xDCF7,0x5F9D,{ 0xA4,0x60,0x93,0x4A,0x88,0x3A,0xCD,0xC1 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>{ static constexpr guid value{ 0x6C43C315,0xDE90,0x520E,{ 0x90,0x6B,0x83,0x17,0xB7,0x56,0x4B,0x97 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>{ static constexpr guid value{ 0xB28B0160,0x022C,0x593C,{ 0xAB,0x9A,0x7B,0x3D,0xED,0x2C,0x07,0x54 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>{ static constexpr guid value{ 0x48265FC1,0x761E,0x5F41,{ 0x81,0x66,0xFA,0x51,0x73,0x3A,0x45,0xEF } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListView>{ static constexpr guid value{ 0x35108696,0x113F,0x57E2,{ 0x96,0xFC,0x22,0xD5,0x68,0xCC,0xB5,0xF6 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewFactory>{ static constexpr guid value{ 0x055926FE,0x1C8B,0x5BDA,{ 0x98,0xCF,0xED,0xCD,0x65,0x95,0xBF,0x27 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItem>{ static constexpr guid value{ 0xA94BE650,0xC2A5,0x56BC,{ 0xB6,0x0A,0xF9,0x32,0xDE,0x04,0xEA,0xE8 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItemFactory>{ static constexpr guid value{ 0xAA49A764,0x047D,0x58C3,{ 0x91,0x18,0x8D,0x23,0x8B,0x00,0xB8,0x4F } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPoint>{ static constexpr guid value{ 0x5828FB51,0x8EBB,0x596D,{ 0xA8,0x71,0x50,0x06,0x34,0x79,0x36,0x2D } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPointFactory>{ static constexpr guid value{ 0xF2FD8403,0x679E,0x5C31,{ 0xB4,0x31,0x72,0xA0,0xE0,0x01,0x4E,0x6A } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPoint>{ static constexpr guid value{ 0x1FA6DBBE,0x5E11,0x5D32,{ 0x87,0x3B,0xC9,0x2B,0x1D,0x17,0x15,0x38 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPointFactory>{ static constexpr guid value{ 0x7D032A7C,0xD91C,0x5660,{ 0xB1,0xC2,0xB3,0x6E,0x88,0x10,0xAC,0x65 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>{ static constexpr guid value{ 0x531EF263,0x0AE4,0x54FF,{ 0xA3,0x45,0x68,0xB4,0x14,0xA5,0x37,0x40 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgs>{ static constexpr guid value{ 0x9CA050FA,0x6A7B,0x5BED,{ 0x9E,0x26,0x8F,0x2D,0xA0,0xEE,0x73,0xA1 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgsFactory>{ static constexpr guid value{ 0x1CCE9A33,0x698D,0x54DC,{ 0xB1,0x44,0xD6,0x8B,0x9E,0x7B,0x76,0xC2 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgs>{ static constexpr guid value{ 0x38CF8BD7,0x5BB2,0x575D,{ 0x9C,0x83,0x9B,0x5E,0x23,0xD2,0x36,0x3D } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgsFactory>{ static constexpr guid value{ 0xA690796D,0xB6C8,0x550E,{ 0xB7,0xBE,0x40,0xC5,0x81,0x68,0x46,0x39 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgs>{ static constexpr guid value{ 0xCFB817EB,0x2A20,0x550B,{ 0x97,0xBC,0xBD,0x15,0xBA,0xDA,0x69,0xEC } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgsFactory>{ static constexpr guid value{ 0x0C4F8B39,0xD458,0x51DA,{ 0xB7,0xB7,0xBE,0x89,0x9D,0x0D,0x98,0x35 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgs>{ static constexpr guid value{ 0x4A87932C,0xA2E0,0x542E,{ 0x87,0xCE,0xAD,0xBC,0x28,0x4C,0xDC,0xF0 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgsFactory>{ static constexpr guid value{ 0xCA68119D,0x6ADE,0x5164,{ 0xBB,0x13,0xCC,0x36,0xF1,0xAC,0x65,0x2F } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPoint>{ static constexpr guid value{ 0x73D918FF,0xD16C,0x52CD,{ 0x96,0x57,0xE3,0x92,0xEE,0x08,0x86,0x8A } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBase>{ static constexpr guid value{ 0xD5924E5B,0x7904,0x5AFB,{ 0xBE,0xE7,0x21,0xA1,0xAF,0xDB,0x08,0xD1 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBaseFactory>{ static constexpr guid value{ 0x3FA2E552,0x1A45,0x5691,{ 0x99,0xDC,0x64,0x00,0x08,0x7C,0xBB,0x38 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointFactory>{ static constexpr guid value{ 0x39304BC7,0x0E54,0x5C06,{ 0x89,0x20,0xAD,0xCF,0x67,0xE7,0xC4,0x66 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScroller>{ static constexpr guid value{ 0x11FF9962,0x2C1E,0x5B3D,{ 0x9C,0xD8,0x78,0x82,0x9B,0x69,0x7A,0xD7 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollerFactory>{ static constexpr guid value{ 0x6094F4DD,0xF93D,0x5636,{ 0xB4,0xB5,0xE9,0x38,0xC0,0xCB,0x06,0x8E } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IScrollerStatics>{ static constexpr guid value{ 0xD46A8A1D,0x9B3A,0x5A40,{ 0x80,0xF8,0xF0,0x07,0x0F,0xF5,0x10,0x04 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBase>{ static constexpr guid value{ 0x14ED1089,0xFB97,0x5211,{ 0x8C,0x45,0xC3,0x52,0xCD,0x8B,0x96,0xA1 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBaseFactory>{ static constexpr guid value{ 0x50266508,0x15F8,0x530A,{ 0xA2,0x13,0xE9,0x76,0xE0,0x4E,0x67,0x0B } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPoint>{ static constexpr guid value{ 0x8101D353,0x8DB3,0x5AC6,{ 0xA7,0xF8,0xB1,0x8E,0xB9,0xC1,0x23,0xAC } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBase>{ static constexpr guid value{ 0xC6D08756,0x0860,0x5C2D,{ 0xAB,0xEC,0x6E,0xB4,0xAA,0x4B,0x53,0xD7 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBaseFactory>{ static constexpr guid value{ 0x2C689EEA,0xB6CF,0x5024,{ 0x84,0x7B,0x58,0x93,0x55,0xD5,0xA2,0xFA } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointFactory>{ static constexpr guid value{ 0x0B3B5418,0xBFF6,0x5A9E,{ 0xB7,0x34,0xB6,0x8A,0xDF,0x49,0xF7,0x75 } }; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter>{ using type = Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListView>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListView; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListViewItem>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItem; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::RepeatedScrollSnapPoint>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPoint; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::RepeatedZoomSnapPoint>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPoint; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerInteractionRequestedEventArgs>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgs; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollByRequestedEventArgs>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgs; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollFromRequestedEventArgs>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgs; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollToRequestedEventArgs>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgs; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPoint>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPoint; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointBase>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBase; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::Scroller>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IScroller; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::SnapPointBase>{ using type = Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBase; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPoint>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPoint; };
template <> struct default_interface<Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPointBase>{ using type = Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBase; };

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_ColorChannel(Microsoft::UI::Xaml::Controls::ColorPickerHsvChannel* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_ColorChannel(Microsoft::UI::Xaml::Controls::ColorPickerHsvChannel value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_ColorChannelProperty(void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Color(struct struct_Windows_UI_Color* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Color(struct struct_Windows_UI_Color value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HsvColor(Windows::Foundation::Numerics::float4* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_HsvColor(Windows::Foundation::Numerics::float4 value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinHue(int32_t* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MinHue(int32_t value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxHue(int32_t* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MaxHue(int32_t value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinSaturation(int32_t* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MinSaturation(int32_t value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxSaturation(int32_t* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MaxSaturation(int32_t value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinValue(int32_t* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MinValue(int32_t value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxValue(int32_t* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MaxValue(int32_t value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Shape(Microsoft::UI::Xaml::Controls::ColorSpectrumShape* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Shape(Microsoft::UI::Xaml::Controls::ColorSpectrumShape value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Components(Microsoft::UI::Xaml::Controls::ColorSpectrumComponents* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Components(Microsoft::UI::Xaml::Controls::ColorSpectrumComponents value) noexcept = 0;
    virtual int32_t WINRT_CALL add_ColorChanged(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ColorChanged(winrt::event_token token) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_ColorProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HsvColorProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinHueProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxHueProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinSaturationProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxSaturationProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinValueProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxValueProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ShapeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ComponentsProperty(void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_FlyoutTemplateSettings(void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_OpenAnimationStartPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_OpenAnimationEndPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_CloseAnimationEndPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_CurrentWidth(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandedWidth(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_WidthExpansionDelta(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_WidthExpansionAnimationStartPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_WidthExpansionAnimationEndPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_WidthExpansionMoreButtonAnimationStartPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_WidthExpansionMoreButtonAnimationEndPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandUpOverflowVerticalPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandDownOverflowVerticalPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandUpAnimationStartPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandUpAnimationEndPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandUpAnimationHoldPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandDownAnimationStartPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandDownAnimationEndPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpandDownAnimationHoldPosition(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ContentClipRect(Windows::Foundation::Rect* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_OverflowContentClipRect(Windows::Foundation::Rect* value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Icon(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Icon(void* value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_IconProperty(void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListView>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItem>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItemFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPoint>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Offset(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Interval(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Start(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_End(double* value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPointFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(double offset, double interval, double start, double end, Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment alignment, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPoint>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Offset(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Interval(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Start(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_End(double* value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPointFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(double offset, double interval, double start, double end, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_AreInteractionsAllowed(bool* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_AreScrollerInteractionsAllowed(bool* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_IsInteracting(bool* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_IsInteractionVisualRailEnabled(bool* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_InteractionVisual(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_InteractionVisualScrollOrientation(Windows::UI::Xaml::Controls::Orientation* value) noexcept = 0;
    virtual int32_t WINRT_CALL SetExpressionAnimationSources(void* propertySet, void* minOffsetPropertyName, void* maxOffsetPropertyName, void* offsetPropertyName, void* multiplierPropertyName) noexcept = 0;
    virtual int32_t WINRT_CALL SetScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode scrollMode) noexcept = 0;
    virtual int32_t WINRT_CALL SetValues(double minOffset, double maxOffset, double offset, double viewport) noexcept = 0;
    virtual int32_t WINRT_CALL GetScrollAnimation(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo info, Windows::Foundation::Numerics::float2 currentPosition, void* defaultAnimation, void** result) noexcept = 0;
    virtual int32_t WINRT_CALL OnScrollCompleted(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo info) noexcept = 0;
    virtual int32_t WINRT_CALL add_ScrollToRequested(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ScrollToRequested(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_ScrollByRequested(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ScrollByRequested(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_ScrollFromRequested(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ScrollFromRequested(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_InteractionRequested(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_InteractionRequested(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_InteractionInfoChanged(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_InteractionInfoChanged(winrt::event_token token) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgs>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_PointerPoint(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Handled(bool* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Handled(bool value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgsFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* pointerPoint, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgs>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_OffsetDelta(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Options(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Info(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Info(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgsFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(double offsetDelta, void* options, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgs>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_OffsetVelocity(float* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_InertiaDecayRate(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Info(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Info(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgsFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(float offsetVelocity, void* inertiaDecayRate, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgs>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Offset(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Options(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Info(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Info(struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgsFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(double offset, void* options, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPoint>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Value(double* value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBase>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Alignment(Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Alignment(Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBaseFactory>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(double snapPointValue, Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment alignment, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScroller>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Background(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Background(void* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_Content(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL put_Content(void* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExpressionAnimationSources(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalOffset(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalOffset(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ZoomFactor(float* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExtentWidth(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ExtentHeight(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ViewportWidth(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ViewportHeight(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ScrollableWidth(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ScrollableHeight(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ContentOrientation(Microsoft::UI::Xaml::Controls::ContentOrientation* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_ContentOrientation(Microsoft::UI::Xaml::Controls::ContentOrientation value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalScrollChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_HorizontalScrollChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalScrollChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_VerticalScrollChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalScrollRailingMode(Microsoft::UI::Xaml::Controls::RailingMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_HorizontalScrollRailingMode(Microsoft::UI::Xaml::Controls::RailingMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalScrollRailingMode(Microsoft::UI::Xaml::Controls::RailingMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_VerticalScrollRailingMode(Microsoft::UI::Xaml::Controls::RailingMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_HorizontalScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_VerticalScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ZoomChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_ZoomChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ZoomMode(Microsoft::UI::Xaml::Controls::ZoomMode* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_ZoomMode(Microsoft::UI::Xaml::Controls::ZoomMode value) noexcept = 0;
    virtual int32_t WINRT_CALL get_IgnoredInputKind(Microsoft::UI::Xaml::Controls::InputKind* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_IgnoredInputKind(Microsoft::UI::Xaml::Controls::InputKind value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinZoomFactor(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MinZoomFactor(double value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxZoomFactor(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MaxZoomFactor(double value) noexcept = 0;
    virtual int32_t WINRT_CALL get_State(Microsoft::UI::Xaml::Controls::InteractionState* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalScrollController(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL put_HorizontalScrollController(void* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalScrollController(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL put_VerticalScrollController(void* value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalAnchorRatio(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_HorizontalAnchorRatio(double value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalAnchorRatio(double* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_VerticalAnchorRatio(double value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalSnapPoints(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalSnapPoints(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ZoomSnapPoints(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL ScrollTo(double horizontalOffset, double verticalOffset, struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ScrollToWithOptions(double horizontalOffset, double verticalOffset, void* options, struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ScrollBy(double horizontalOffsetDelta, double verticalOffsetDelta, struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ScrollByWithOptions(double horizontalOffsetDelta, double verticalOffsetDelta, void* options, struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ScrollFrom(Windows::Foundation::Numerics::float2 offsetsVelocity, void* inertiaDecayRate, struct struct_Microsoft_UI_Xaml_Controls_ScrollInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ZoomTo(float zoomFactor, void* centerPoint, struct struct_Microsoft_UI_Xaml_Controls_ZoomInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ZoomToWithOptions(float zoomFactor, void* centerPoint, void* options, struct struct_Microsoft_UI_Xaml_Controls_ZoomInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ZoomBy(float zoomFactorDelta, void* centerPoint, struct struct_Microsoft_UI_Xaml_Controls_ZoomInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ZoomByWithOptions(float zoomFactorDelta, void* centerPoint, void* options, struct struct_Microsoft_UI_Xaml_Controls_ZoomInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL ZoomFrom(float zoomFactorVelocity, void* centerPoint, void* inertiaDecayRate, struct struct_Microsoft_UI_Xaml_Controls_ZoomInfo* result) noexcept = 0;
    virtual int32_t WINRT_CALL add_ExtentChanged(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ExtentChanged(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_StateChanged(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_StateChanged(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_ViewChanged(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ViewChanged(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_ScrollAnimationStarting(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ScrollAnimationStarting(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_ZoomAnimationStarting(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ZoomAnimationStarting(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_ScrollCompleted(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ScrollCompleted(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_ZoomCompleted(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_ZoomCompleted(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_BringingIntoView(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_BringingIntoView(winrt::event_token token) noexcept = 0;
    virtual int32_t WINRT_CALL add_AnchorRequested(void* handler, winrt::event_token* token) noexcept = 0;
    virtual int32_t WINRT_CALL remove_AnchorRequested(winrt::event_token token) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IScrollerStatics>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_BackgroundProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ContentProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ContentOrientationProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalScrollChainingModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalScrollChainingModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalScrollRailingModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalScrollRailingModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalScrollModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalScrollModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ZoomChainingModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_ZoomModeProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_IgnoredInputKindProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MinZoomFactorProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_MaxZoomFactorProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_HorizontalAnchorRatioProperty(void** value) noexcept = 0;
    virtual int32_t WINRT_CALL get_VerticalAnchorRatioProperty(void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBase>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBaseFactory>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPoint>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_Value(double* value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBase>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBaseFactory>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(double snapPointValue, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSlider
{
    Microsoft::UI::Xaml::Controls::ColorPickerHsvChannel ColorChannel() const;
    void ColorChannel(Microsoft::UI::Xaml::Controls::ColorPickerHsvChannel const& value) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSlider> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSlider<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderStatics
{
    Windows::UI::Xaml::DependencyProperty ColorChannelProperty() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorPickerSliderStatics> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorPickerSliderStatics<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrum
{
    Windows::UI::Color Color() const;
    void Color(Windows::UI::Color const& value) const;
    Windows::Foundation::Numerics::float4 HsvColor() const;
    void HsvColor(Windows::Foundation::Numerics::float4 const& value) const;
    int32_t MinHue() const;
    void MinHue(int32_t value) const;
    int32_t MaxHue() const;
    void MaxHue(int32_t value) const;
    int32_t MinSaturation() const;
    void MinSaturation(int32_t value) const;
    int32_t MaxSaturation() const;
    void MaxSaturation(int32_t value) const;
    int32_t MinValue() const;
    void MinValue(int32_t value) const;
    int32_t MaxValue() const;
    void MaxValue(int32_t value) const;
    Microsoft::UI::Xaml::Controls::ColorSpectrumShape Shape() const;
    void Shape(Microsoft::UI::Xaml::Controls::ColorSpectrumShape const& value) const;
    Microsoft::UI::Xaml::Controls::ColorSpectrumComponents Components() const;
    void Components(Microsoft::UI::Xaml::Controls::ColorSpectrumComponents const& value) const;
    winrt::event_token ColorChanged(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum, Microsoft::UI::Xaml::Controls::ColorChangedEventArgs> const& handler) const;
    using ColorChanged_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum>::remove_ColorChanged>;
    ColorChanged_revoker ColorChanged(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum, Microsoft::UI::Xaml::Controls::ColorChangedEventArgs> const& handler) const;
    void ColorChanged(winrt::event_token const& token) const noexcept;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrum> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrum<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumStatics
{
    Windows::UI::Xaml::DependencyProperty ColorProperty() const;
    Windows::UI::Xaml::DependencyProperty HsvColorProperty() const;
    Windows::UI::Xaml::DependencyProperty MinHueProperty() const;
    Windows::UI::Xaml::DependencyProperty MaxHueProperty() const;
    Windows::UI::Xaml::DependencyProperty MinSaturationProperty() const;
    Windows::UI::Xaml::DependencyProperty MaxSaturationProperty() const;
    Windows::UI::Xaml::DependencyProperty MinValueProperty() const;
    Windows::UI::Xaml::DependencyProperty MaxValueProperty() const;
    Windows::UI::Xaml::DependencyProperty ShapeProperty() const;
    Windows::UI::Xaml::DependencyProperty ComponentsProperty() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IColorSpectrumStatics> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IColorSpectrumStatics<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBar
{
    Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBarTemplateSettings FlyoutTemplateSettings() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBar> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBar<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::CommandBarFlyoutCommandBar CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarTemplateSettings
{
    double OpenAnimationStartPosition() const;
    double OpenAnimationEndPosition() const;
    double CloseAnimationEndPosition() const;
    double CurrentWidth() const;
    double ExpandedWidth() const;
    double WidthExpansionDelta() const;
    double WidthExpansionAnimationStartPosition() const;
    double WidthExpansionAnimationEndPosition() const;
    double WidthExpansionMoreButtonAnimationStartPosition() const;
    double WidthExpansionMoreButtonAnimationEndPosition() const;
    double ExpandUpOverflowVerticalPosition() const;
    double ExpandDownOverflowVerticalPosition() const;
    double ExpandUpAnimationStartPosition() const;
    double ExpandUpAnimationEndPosition() const;
    double ExpandUpAnimationHoldPosition() const;
    double ExpandDownAnimationStartPosition() const;
    double ExpandDownAnimationEndPosition() const;
    double ExpandDownAnimationHoldPosition() const;
    Windows::Foundation::Rect ContentClipRect() const;
    Windows::Foundation::Rect OverflowContentClipRect() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ICommandBarFlyoutCommandBarTemplateSettings> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ICommandBarFlyoutCommandBarTemplateSettings<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenter
{
    Windows::UI::Xaml::Controls::IconElement Icon() const;
    void Icon(Windows::UI::Xaml::Controls::IconElement const& value) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenter> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenter<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::NavigationViewItemPresenter CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterStatics
{
    Windows::UI::Xaml::DependencyProperty IconProperty() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::INavigationViewItemPresenterStatics> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_INavigationViewItemPresenterStatics<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListView
{
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListView> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListView<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListViewFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListView CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListViewFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListViewItem
{
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItem> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListViewItem<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListViewItemFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListViewItem CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRadioButtonsListViewItemFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRadioButtonsListViewItemFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedScrollSnapPoint
{
    double Offset() const;
    double Interval() const;
    double Start() const;
    double End() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPoint> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedScrollSnapPoint<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedScrollSnapPointFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::RepeatedScrollSnapPoint CreateInstance(double offset, double interval, double start, double end, Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment const& alignment, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedScrollSnapPointFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedScrollSnapPointFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedZoomSnapPoint
{
    double Offset() const;
    double Interval() const;
    double Start() const;
    double End() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPoint> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedZoomSnapPoint<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedZoomSnapPointFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::RepeatedZoomSnapPoint CreateInstance(double offset, double interval, double start, double end, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IRepeatedZoomSnapPointFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IRepeatedZoomSnapPointFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollController
{
    bool AreInteractionsAllowed() const;
    bool AreScrollerInteractionsAllowed() const;
    bool IsInteracting() const;
    bool IsInteractionVisualRailEnabled() const;
    Windows::UI::Composition::Visual InteractionVisual() const;
    Windows::UI::Xaml::Controls::Orientation InteractionVisualScrollOrientation() const;
    void SetExpressionAnimationSources(Windows::UI::Composition::CompositionPropertySet const& propertySet, param::hstring const& minOffsetPropertyName, param::hstring const& maxOffsetPropertyName, param::hstring const& offsetPropertyName, param::hstring const& multiplierPropertyName) const;
    void SetScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode const& scrollMode) const;
    void SetValues(double minOffset, double maxOffset, double offset, double viewport) const;
    Windows::UI::Composition::CompositionAnimation GetScrollAnimation(Microsoft::UI::Xaml::Controls::ScrollInfo const& info, Windows::Foundation::Numerics::float2 const& currentPosition, Windows::UI::Composition::CompositionAnimation const& defaultAnimation) const;
    void OnScrollCompleted(Microsoft::UI::Xaml::Controls::ScrollInfo const& info) const;
    winrt::event_token ScrollToRequested(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollToRequestedEventArgs> const& handler) const;
    using ScrollToRequested_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>::remove_ScrollToRequested>;
    ScrollToRequested_revoker ScrollToRequested(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollToRequestedEventArgs> const& handler) const;
    void ScrollToRequested(winrt::event_token const& token) const noexcept;
    winrt::event_token ScrollByRequested(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollByRequestedEventArgs> const& handler) const;
    using ScrollByRequested_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>::remove_ScrollByRequested>;
    ScrollByRequested_revoker ScrollByRequested(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollByRequestedEventArgs> const& handler) const;
    void ScrollByRequested(winrt::event_token const& token) const noexcept;
    winrt::event_token ScrollFromRequested(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollFromRequestedEventArgs> const& handler) const;
    using ScrollFromRequested_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>::remove_ScrollFromRequested>;
    ScrollFromRequested_revoker ScrollFromRequested(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollFromRequestedEventArgs> const& handler) const;
    void ScrollFromRequested(winrt::event_token const& token) const noexcept;
    winrt::event_token InteractionRequested(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerInteractionRequestedEventArgs> const& handler) const;
    using InteractionRequested_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>::remove_InteractionRequested>;
    InteractionRequested_revoker InteractionRequested(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerInteractionRequestedEventArgs> const& handler) const;
    void InteractionRequested(winrt::event_token const& token) const noexcept;
    winrt::event_token InteractionInfoChanged(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Windows::Foundation::IInspectable> const& handler) const;
    using InteractionInfoChanged_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScrollController>::remove_InteractionInfoChanged>;
    InteractionInfoChanged_revoker InteractionInfoChanged(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::IScrollController, Windows::Foundation::IInspectable> const& handler) const;
    void InteractionInfoChanged(winrt::event_token const& token) const noexcept;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollController> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollController<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerInteractionRequestedEventArgs
{
    Windows::UI::Input::PointerPoint PointerPoint() const;
    bool Handled() const;
    void Handled(bool value) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgs> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerInteractionRequestedEventArgs<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerInteractionRequestedEventArgsFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerInteractionRequestedEventArgs CreateInstance(Windows::UI::Input::PointerPoint const& pointerPoint) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerInteractionRequestedEventArgsFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerInteractionRequestedEventArgsFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollByRequestedEventArgs
{
    double OffsetDelta() const;
    Microsoft::UI::Xaml::Controls::ScrollOptions Options() const;
    Microsoft::UI::Xaml::Controls::ScrollInfo Info() const;
    void Info(Microsoft::UI::Xaml::Controls::ScrollInfo const& value) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgs> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollByRequestedEventArgs<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollByRequestedEventArgsFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollByRequestedEventArgs CreateInstance(double offsetDelta, Microsoft::UI::Xaml::Controls::ScrollOptions const& options) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollByRequestedEventArgsFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollByRequestedEventArgsFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollFromRequestedEventArgs
{
    float OffsetVelocity() const;
    Windows::Foundation::IReference<float> InertiaDecayRate() const;
    Microsoft::UI::Xaml::Controls::ScrollInfo Info() const;
    void Info(Microsoft::UI::Xaml::Controls::ScrollInfo const& value) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgs> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollFromRequestedEventArgs<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollFromRequestedEventArgsFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollFromRequestedEventArgs CreateInstance(float offsetVelocity, optional<float> const& inertiaDecayRate) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollFromRequestedEventArgsFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollFromRequestedEventArgsFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollToRequestedEventArgs
{
    double Offset() const;
    Microsoft::UI::Xaml::Controls::ScrollOptions Options() const;
    Microsoft::UI::Xaml::Controls::ScrollInfo Info() const;
    void Info(Microsoft::UI::Xaml::Controls::ScrollInfo const& value) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgs> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollToRequestedEventArgs<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollToRequestedEventArgsFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ScrollControllerScrollToRequestedEventArgs CreateInstance(double offset, Microsoft::UI::Xaml::Controls::ScrollOptions const& options) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollControllerScrollToRequestedEventArgsFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollControllerScrollToRequestedEventArgsFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPoint
{
    double Value() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPoint> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPoint<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPointBase
{
    Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment Alignment() const;
    void Alignment(Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment const& value) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBase> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPointBase<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPointBaseFactory
{
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointBaseFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPointBaseFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPointFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPoint CreateInstance(double snapPointValue, Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointsAlignment const& alignment, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollSnapPointFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollSnapPointFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScroller
{
    Windows::UI::Xaml::Media::Brush Background() const;
    void Background(Windows::UI::Xaml::Media::Brush const& value) const;
    Windows::UI::Xaml::UIElement Content() const;
    void Content(Windows::UI::Xaml::UIElement const& value) const;
    Windows::UI::Composition::CompositionPropertySet ExpressionAnimationSources() const;
    double HorizontalOffset() const;
    double VerticalOffset() const;
    float ZoomFactor() const;
    double ExtentWidth() const;
    double ExtentHeight() const;
    double ViewportWidth() const;
    double ViewportHeight() const;
    double ScrollableWidth() const;
    double ScrollableHeight() const;
    Microsoft::UI::Xaml::Controls::ContentOrientation ContentOrientation() const;
    void ContentOrientation(Microsoft::UI::Xaml::Controls::ContentOrientation const& value) const;
    Microsoft::UI::Xaml::Controls::ChainingMode HorizontalScrollChainingMode() const;
    void HorizontalScrollChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode const& value) const;
    Microsoft::UI::Xaml::Controls::ChainingMode VerticalScrollChainingMode() const;
    void VerticalScrollChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode const& value) const;
    Microsoft::UI::Xaml::Controls::RailingMode HorizontalScrollRailingMode() const;
    void HorizontalScrollRailingMode(Microsoft::UI::Xaml::Controls::RailingMode const& value) const;
    Microsoft::UI::Xaml::Controls::RailingMode VerticalScrollRailingMode() const;
    void VerticalScrollRailingMode(Microsoft::UI::Xaml::Controls::RailingMode const& value) const;
    Microsoft::UI::Xaml::Controls::ScrollMode HorizontalScrollMode() const;
    void HorizontalScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode const& value) const;
    Microsoft::UI::Xaml::Controls::ScrollMode VerticalScrollMode() const;
    void VerticalScrollMode(Microsoft::UI::Xaml::Controls::ScrollMode const& value) const;
    Microsoft::UI::Xaml::Controls::ChainingMode ZoomChainingMode() const;
    void ZoomChainingMode(Microsoft::UI::Xaml::Controls::ChainingMode const& value) const;
    Microsoft::UI::Xaml::Controls::ZoomMode ZoomMode() const;
    void ZoomMode(Microsoft::UI::Xaml::Controls::ZoomMode const& value) const;
    Microsoft::UI::Xaml::Controls::InputKind IgnoredInputKind() const;
    void IgnoredInputKind(Microsoft::UI::Xaml::Controls::InputKind const& value) const;
    double MinZoomFactor() const;
    void MinZoomFactor(double value) const;
    double MaxZoomFactor() const;
    void MaxZoomFactor(double value) const;
    Microsoft::UI::Xaml::Controls::InteractionState State() const;
    Microsoft::UI::Xaml::Controls::Primitives::IScrollController HorizontalScrollController() const;
    void HorizontalScrollController(Microsoft::UI::Xaml::Controls::Primitives::IScrollController const& value) const;
    Microsoft::UI::Xaml::Controls::Primitives::IScrollController VerticalScrollController() const;
    void VerticalScrollController(Microsoft::UI::Xaml::Controls::Primitives::IScrollController const& value) const;
    double HorizontalAnchorRatio() const;
    void HorizontalAnchorRatio(double value) const;
    double VerticalAnchorRatio() const;
    void VerticalAnchorRatio(double value) const;
    Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointBase> HorizontalSnapPoints() const;
    Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Controls::Primitives::ScrollSnapPointBase> VerticalSnapPoints() const;
    Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPointBase> ZoomSnapPoints() const;
    Microsoft::UI::Xaml::Controls::ScrollInfo ScrollTo(double horizontalOffset, double verticalOffset) const;
    Microsoft::UI::Xaml::Controls::ScrollInfo ScrollTo(double horizontalOffset, double verticalOffset, Microsoft::UI::Xaml::Controls::ScrollOptions const& options) const;
    Microsoft::UI::Xaml::Controls::ScrollInfo ScrollBy(double horizontalOffsetDelta, double verticalOffsetDelta) const;
    Microsoft::UI::Xaml::Controls::ScrollInfo ScrollBy(double horizontalOffsetDelta, double verticalOffsetDelta, Microsoft::UI::Xaml::Controls::ScrollOptions const& options) const;
    Microsoft::UI::Xaml::Controls::ScrollInfo ScrollFrom(Windows::Foundation::Numerics::float2 const& offsetsVelocity, optional<Windows::Foundation::Numerics::float2> const& inertiaDecayRate) const;
    Microsoft::UI::Xaml::Controls::ZoomInfo ZoomTo(float zoomFactor, optional<Windows::Foundation::Numerics::float2> const& centerPoint) const;
    Microsoft::UI::Xaml::Controls::ZoomInfo ZoomTo(float zoomFactor, optional<Windows::Foundation::Numerics::float2> const& centerPoint, Microsoft::UI::Xaml::Controls::ZoomOptions const& options) const;
    Microsoft::UI::Xaml::Controls::ZoomInfo ZoomBy(float zoomFactorDelta, optional<Windows::Foundation::Numerics::float2> const& centerPoint) const;
    Microsoft::UI::Xaml::Controls::ZoomInfo ZoomBy(float zoomFactorDelta, optional<Windows::Foundation::Numerics::float2> const& centerPoint, Microsoft::UI::Xaml::Controls::ZoomOptions const& options) const;
    Microsoft::UI::Xaml::Controls::ZoomInfo ZoomFrom(float zoomFactorVelocity, optional<Windows::Foundation::Numerics::float2> const& centerPoint, optional<float> const& inertiaDecayRate) const;
    winrt::event_token ExtentChanged(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Windows::Foundation::IInspectable> const& handler) const;
    using ExtentChanged_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_ExtentChanged>;
    ExtentChanged_revoker ExtentChanged(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Windows::Foundation::IInspectable> const& handler) const;
    void ExtentChanged(winrt::event_token const& token) const noexcept;
    winrt::event_token StateChanged(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Windows::Foundation::IInspectable> const& handler) const;
    using StateChanged_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_StateChanged>;
    StateChanged_revoker StateChanged(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Windows::Foundation::IInspectable> const& handler) const;
    void StateChanged(winrt::event_token const& token) const noexcept;
    winrt::event_token ViewChanged(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Windows::Foundation::IInspectable> const& handler) const;
    using ViewChanged_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_ViewChanged>;
    ViewChanged_revoker ViewChanged(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Windows::Foundation::IInspectable> const& handler) const;
    void ViewChanged(winrt::event_token const& token) const noexcept;
    winrt::event_token ScrollAnimationStarting(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollAnimationStartingEventArgs> const& handler) const;
    using ScrollAnimationStarting_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_ScrollAnimationStarting>;
    ScrollAnimationStarting_revoker ScrollAnimationStarting(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollAnimationStartingEventArgs> const& handler) const;
    void ScrollAnimationStarting(winrt::event_token const& token) const noexcept;
    winrt::event_token ZoomAnimationStarting(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ZoomAnimationStartingEventArgs> const& handler) const;
    using ZoomAnimationStarting_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_ZoomAnimationStarting>;
    ZoomAnimationStarting_revoker ZoomAnimationStarting(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ZoomAnimationStartingEventArgs> const& handler) const;
    void ZoomAnimationStarting(winrt::event_token const& token) const noexcept;
    winrt::event_token ScrollCompleted(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollCompletedEventArgs> const& handler) const;
    using ScrollCompleted_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_ScrollCompleted>;
    ScrollCompleted_revoker ScrollCompleted(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollCompletedEventArgs> const& handler) const;
    void ScrollCompleted(winrt::event_token const& token) const noexcept;
    winrt::event_token ZoomCompleted(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ZoomCompletedEventArgs> const& handler) const;
    using ZoomCompleted_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_ZoomCompleted>;
    ZoomCompleted_revoker ZoomCompleted(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ZoomCompletedEventArgs> const& handler) const;
    void ZoomCompleted(winrt::event_token const& token) const noexcept;
    winrt::event_token BringingIntoView(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollerBringingIntoViewEventArgs> const& handler) const;
    using BringingIntoView_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_BringingIntoView>;
    BringingIntoView_revoker BringingIntoView(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollerBringingIntoViewEventArgs> const& handler) const;
    void BringingIntoView(winrt::event_token const& token) const noexcept;
    winrt::event_token AnchorRequested(Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollerAnchorRequestedEventArgs> const& handler) const;
    using AnchorRequested_revoker = impl::event_revoker<Microsoft::UI::Xaml::Controls::Primitives::IScroller, &impl::abi_t<Microsoft::UI::Xaml::Controls::Primitives::IScroller>::remove_AnchorRequested>;
    AnchorRequested_revoker AnchorRequested(auto_revoke_t, Windows::Foundation::TypedEventHandler<Microsoft::UI::Xaml::Controls::Primitives::Scroller, Microsoft::UI::Xaml::Controls::ScrollerAnchorRequestedEventArgs> const& handler) const;
    void AnchorRequested(winrt::event_token const& token) const noexcept;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScroller> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScroller<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollerFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::Scroller CreateInstance(Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollerStatics
{
    Windows::UI::Xaml::DependencyProperty BackgroundProperty() const;
    Windows::UI::Xaml::DependencyProperty ContentProperty() const;
    Windows::UI::Xaml::DependencyProperty ContentOrientationProperty() const;
    Windows::UI::Xaml::DependencyProperty HorizontalScrollChainingModeProperty() const;
    Windows::UI::Xaml::DependencyProperty VerticalScrollChainingModeProperty() const;
    Windows::UI::Xaml::DependencyProperty HorizontalScrollRailingModeProperty() const;
    Windows::UI::Xaml::DependencyProperty VerticalScrollRailingModeProperty() const;
    Windows::UI::Xaml::DependencyProperty HorizontalScrollModeProperty() const;
    Windows::UI::Xaml::DependencyProperty VerticalScrollModeProperty() const;
    Windows::UI::Xaml::DependencyProperty ZoomChainingModeProperty() const;
    Windows::UI::Xaml::DependencyProperty ZoomModeProperty() const;
    Windows::UI::Xaml::DependencyProperty IgnoredInputKindProperty() const;
    Windows::UI::Xaml::DependencyProperty MinZoomFactorProperty() const;
    Windows::UI::Xaml::DependencyProperty MaxZoomFactorProperty() const;
    Windows::UI::Xaml::DependencyProperty HorizontalAnchorRatioProperty() const;
    Windows::UI::Xaml::DependencyProperty VerticalAnchorRatioProperty() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IScrollerStatics> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IScrollerStatics<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_ISnapPointBase
{
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBase> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ISnapPointBase<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_ISnapPointBaseFactory
{
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::ISnapPointBaseFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_ISnapPointBaseFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPoint
{
    double Value() const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPoint> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPoint<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPointBase
{
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBase> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPointBase<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPointBaseFactory
{
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointBaseFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPointBaseFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPointFactory
{
    Microsoft::UI::Xaml::Controls::Primitives::ZoomSnapPoint CreateInstance(double snapPointValue, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Controls::Primitives::IZoomSnapPointFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Controls_Primitives_IZoomSnapPointFactory<D>; };

}
