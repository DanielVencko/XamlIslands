// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.190111.3

#pragma once

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls {

struct AnimatedVisualPlayer;
struct DropDownButton;
struct ItemsRepeater;
struct MenuBar;
struct MenuBarItem;
struct NavigationViewItem;
struct PersonPicture;
struct RatingControl;
struct SplitButton;
struct TeachingTip;
struct ToggleSplitButton;
struct TreeViewItem;
struct TreeViewList;

}

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Controls::Primitives {

struct ColorPickerSlider;
struct ColorSpectrum;
struct RadioButtonsListViewItem;
struct Scroller;

}

WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Automation {

enum class ExpandCollapseState;
enum class ToggleState;

}

WINRT_EXPORT namespace winrt::Microsoft::UI::Xaml::Automation::Peers {

struct IAnimatedVisualPlayerAutomationPeer;
struct IAnimatedVisualPlayerAutomationPeerFactory;
struct IColorPickerSliderAutomationPeer;
struct IColorPickerSliderAutomationPeerFactory;
struct IColorSpectrumAutomationPeer;
struct IColorSpectrumAutomationPeerFactory;
struct IDropDownButtonAutomationPeer;
struct IDropDownButtonAutomationPeerFactory;
struct IMenuBarAutomationPeer;
struct IMenuBarAutomationPeerFactory;
struct IMenuBarItemAutomationPeer;
struct IMenuBarItemAutomationPeerFactory;
struct INavigationViewItemAutomationPeer;
struct INavigationViewItemAutomationPeerFactory;
struct IPersonPictureAutomationPeer;
struct IPersonPictureAutomationPeerFactory;
struct IRadioButtonsListViewItemAutomationPeer;
struct IRadioButtonsListViewItemAutomationPeerFactory;
struct IRatingControlAutomationPeer;
struct IRatingControlAutomationPeerFactory;
struct IRepeaterAutomationPeer;
struct IRepeaterAutomationPeerFactory;
struct IScrollerAutomationPeer;
struct IScrollerAutomationPeerFactory;
struct ISplitButtonAutomationPeer;
struct ISplitButtonAutomationPeerFactory;
struct ITeachingTipAutomationPeer;
struct ITeachingTipAutomationPeerFactory;
struct IToggleSplitButtonAutomationPeer;
struct IToggleSplitButtonAutomationPeerFactory;
struct ITreeViewItemAutomationPeer;
struct ITreeViewItemAutomationPeerFactory;
struct ITreeViewListAutomationPeer;
struct ITreeViewListAutomationPeerFactory;
struct AnimatedVisualPlayerAutomationPeer;
struct ColorPickerSliderAutomationPeer;
struct ColorSpectrumAutomationPeer;
struct DropDownButtonAutomationPeer;
struct MenuBarAutomationPeer;
struct MenuBarItemAutomationPeer;
struct NavigationViewItemAutomationPeer;
struct PersonPictureAutomationPeer;
struct RadioButtonsListViewItemAutomationPeer;
struct RatingControlAutomationPeer;
struct RepeaterAutomationPeer;
struct ScrollerAutomationPeer;
struct SplitButtonAutomationPeer;
struct TeachingTipAutomationPeer;
struct ToggleSplitButtonAutomationPeer;
struct TreeViewItemAutomationPeer;
struct TreeViewListAutomationPeer;

}

namespace winrt::impl {

template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ using type = interface_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::AnimatedVisualPlayerAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::DropDownButtonAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::RadioButtonsListViewItemAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::RepeaterAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ScrollerAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::SplitButtonAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::TeachingTipAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::ToggleSplitButtonAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ using type = class_category; };
template <> struct category<Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ using type = class_category; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IAnimatedVisualPlayerAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorPickerSliderAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IColorSpectrumAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IDropDownButtonAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IMenuBarItemAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.INavigationViewItemAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IPersonPictureAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsListViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRadioButtonsListViewItemAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRatingControlAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IRepeaterAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IScrollerAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IScrollerAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ISplitButtonAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITeachingTipAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.IToggleSplitButtonAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewItemAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ITreeViewListAutomationPeerFactory" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::AnimatedVisualPlayerAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.AnimatedVisualPlayerAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ColorPickerSliderAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ColorSpectrumAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::DropDownButtonAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.DropDownButtonAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.MenuBarAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.MenuBarItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.NavigationViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.PersonPictureAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::RadioButtonsListViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.RadioButtonsListViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.RatingControlAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::RepeaterAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.RepeaterAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ScrollerAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ScrollerAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::SplitButtonAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.SplitButtonAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::TeachingTipAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.TeachingTipAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::ToggleSplitButtonAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.ToggleSplitButtonAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.TreeViewItemAutomationPeer" }; };
template <> struct name<Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ static constexpr auto & value{ L"Microsoft.UI.Xaml.Automation.Peers.TreeViewListAutomationPeer" }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>{ static constexpr guid value{ 0xF949EEB6,0xB3EA,0x58AD,{ 0xB6,0x2B,0xB7,0x25,0x5B,0xCC,0x04,0xDF } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>{ static constexpr guid value{ 0xD2A49198,0x80BB,0x51D6,{ 0xB4,0x95,0x3D,0xC5,0xAA,0xB5,0x95,0x89 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ static constexpr guid value{ 0x793D35D4,0x4152,0x50FA,{ 0xB5,0xF4,0xF6,0xC0,0x45,0xC1,0x33,0x9D } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ static constexpr guid value{ 0xE5F9093F,0x5E2C,0x5148,{ 0xB5,0xD1,0x1C,0xDA,0x4E,0xB8,0x69,0x13 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ static constexpr guid value{ 0x005AC3D1,0xB031,0x58AB,{ 0x91,0x8D,0x03,0x0F,0xAB,0xAE,0xAF,0x87 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ static constexpr guid value{ 0xCFCCAE7E,0xFE0F,0x5C9C,{ 0x9D,0x1A,0x69,0xE2,0x0E,0x02,0x32,0xCF } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>{ static constexpr guid value{ 0x7DC37DEC,0x0A0A,0x5C98,{ 0x8A,0x6F,0x9E,0x47,0xDB,0xAB,0x2F,0x82 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>{ static constexpr guid value{ 0x68C4BFFA,0x1685,0x5936,{ 0xB2,0x19,0x51,0x7E,0x87,0xFD,0x59,0x1F } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ static constexpr guid value{ 0xAE96E710,0xB9D3,0x59DD,{ 0x97,0x3E,0x1B,0xBC,0x86,0xCF,0x0A,0xFC } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ static constexpr guid value{ 0xD3E1CA3F,0x1702,0x5BD3,{ 0x8A,0xDB,0xE6,0xF6,0xCB,0x9E,0x75,0x31 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ static constexpr guid value{ 0x2DA890CD,0x0AAE,0x53B9,{ 0x8C,0x12,0x81,0x00,0x3F,0x60,0xED,0x14 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ static constexpr guid value{ 0x603B63C4,0xA626,0x50E6,{ 0x9C,0x1A,0x64,0x96,0x99,0xCA,0x7A,0xD6 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ static constexpr guid value{ 0xC7924C7A,0x739F,0x5251,{ 0x9B,0x86,0xDF,0x64,0x86,0xEB,0x08,0xA7 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ static constexpr guid value{ 0x890516D0,0x5A62,0x528B,{ 0x88,0x73,0x4F,0x71,0x40,0xB4,0x04,0x89 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ static constexpr guid value{ 0x2E71779B,0xACA4,0x52C2,{ 0x8A,0x25,0xBC,0x5F,0x1E,0xE3,0xB0,0xAE } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ static constexpr guid value{ 0xBD1709E5,0x1940,0x56FC,{ 0xB5,0xC3,0x85,0xE4,0x57,0x09,0x51,0xCC } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeer>{ static constexpr guid value{ 0x48B6D389,0x9E2A,0x5126,{ 0x93,0x04,0xE9,0x62,0x6F,0xEB,0x43,0xDE } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeerFactory>{ static constexpr guid value{ 0x04460E92,0xBCD7,0x5C88,{ 0x80,0x5F,0x91,0x5E,0xB1,0xF6,0x7E,0x06 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ static constexpr guid value{ 0x55493EC4,0x926B,0x595A,{ 0x97,0xA3,0xA7,0xFA,0x60,0x41,0x88,0xA4 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ static constexpr guid value{ 0xF87DACB6,0xE87E,0x59B3,{ 0x8A,0x40,0x33,0x1E,0xA7,0xAA,0x74,0x7D } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>{ static constexpr guid value{ 0x03F2C315,0xFB55,0x54B2,{ 0x9A,0xAD,0x97,0x23,0xAA,0xF5,0xE2,0xCF } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>{ static constexpr guid value{ 0x04526BC7,0xFA3E,0x55FE,{ 0xA3,0x14,0x98,0x6E,0x2F,0x19,0x6A,0x2F } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeer>{ static constexpr guid value{ 0xC821C7D9,0x3166,0x59DA,{ 0x89,0xC4,0x82,0xFB,0xE2,0xA5,0xF0,0x00 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeerFactory>{ static constexpr guid value{ 0xABF0A206,0xA0E7,0x5F58,{ 0xB6,0x21,0x3F,0x73,0x90,0x3B,0x67,0x8D } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>{ static constexpr guid value{ 0x0182661C,0x0DF3,0x5C7D,{ 0x87,0x52,0x54,0x78,0x04,0xC4,0xFA,0x44 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>{ static constexpr guid value{ 0xE82DDC93,0x780E,0x5000,{ 0x98,0x1E,0x9B,0xE1,0x0E,0xED,0xEB,0x1F } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>{ static constexpr guid value{ 0x607994EC,0xA995,0x5B07,{ 0xB5,0x35,0x8C,0x91,0x3F,0x0B,0xC2,0x6C } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>{ static constexpr guid value{ 0x71A061C1,0x3D71,0x5548,{ 0x98,0xFD,0x62,0x16,0x7F,0x24,0x60,0x85 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>{ static constexpr guid value{ 0x21356952,0x4C74,0x5273,{ 0xB8,0x2D,0xE5,0xCE,0x1B,0xBC,0xD3,0x69 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>{ static constexpr guid value{ 0x61C214A5,0x605B,0x5E98,{ 0xB8,0x5D,0xE3,0x12,0x1D,0x23,0xED,0xAA } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ static constexpr guid value{ 0x25B38166,0xB905,0x5480,{ 0x84,0x39,0xE4,0x59,0xA5,0xB7,0x7B,0x8C } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ static constexpr guid value{ 0x0C993C78,0x981F,0x5DCF,{ 0x93,0xD3,0xA2,0x17,0xAD,0x9A,0xCA,0xB6 } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ static constexpr guid value{ 0x1EBF0F7F,0x6111,0x50A5,{ 0x83,0x98,0x89,0xC4,0xFD,0xD0,0xDE,0xDB } }; };
template <> struct guid_storage<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ static constexpr guid value{ 0x51332D86,0xC414,0x5E7D,{ 0xB5,0x7B,0xE4,0x79,0x98,0x3C,0x9E,0x5D } }; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::AnimatedVisualPlayerAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::DropDownButtonAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::RadioButtonsListViewItemAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::RepeaterAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::ScrollerAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::SplitButtonAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::TeachingTipAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::ToggleSplitButtonAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer; };
template <> struct default_interface<Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer>{ using type = Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer; };

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstance(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer>{ struct type : IInspectable
{
};};

template <> struct abi<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL CreateInstanceWithOwner(void* owner, void* baseInterface, void** innerInterface, void** value) noexcept = 0;
};};

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::AnimatedVisualPlayerAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::AnimatedVisualPlayer const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IAnimatedVisualPlayerAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IAnimatedVisualPlayerAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::ColorPickerSliderAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::Primitives::ColorPickerSlider const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorPickerSliderAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorPickerSliderAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::ColorSpectrumAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::Primitives::ColorSpectrum const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IColorSpectrumAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IColorSpectrumAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::DropDownButtonAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::DropDownButton const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IDropDownButtonAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IDropDownButtonAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::MenuBarAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::MenuBar const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::MenuBarItemAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::MenuBarItem const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IMenuBarItemAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IMenuBarItemAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::NavigationViewItemAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::NavigationViewItem const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::INavigationViewItemAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_INavigationViewItemAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::PersonPictureAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::PersonPicture const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IPersonPictureAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IPersonPictureAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsListViewItemAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsListViewItemAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsListViewItemAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::RadioButtonsListViewItemAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::Primitives::RadioButtonsListViewItem const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRadioButtonsListViewItemAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRadioButtonsListViewItemAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::RatingControlAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::RatingControl const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRatingControlAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRatingControlAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::RepeaterAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::ItemsRepeater const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IRepeaterAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IRepeaterAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IScrollerAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IScrollerAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IScrollerAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::ScrollerAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::Primitives::Scroller const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IScrollerAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IScrollerAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::SplitButtonAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::SplitButton const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ISplitButtonAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ISplitButtonAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::TeachingTipAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::TeachingTip const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITeachingTipAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITeachingTipAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::ToggleSplitButtonAutomationPeer CreateInstance(Microsoft::UI::Xaml::Controls::ToggleSplitButton const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::IToggleSplitButtonAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_IToggleSplitButtonAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::TreeViewItemAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::TreeViewItem const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewItemAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewItemAutomationPeerFactory<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer
{
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeer> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeer<D>; };

template <typename D>
struct consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory
{
    Microsoft::UI::Xaml::Automation::Peers::TreeViewListAutomationPeer CreateInstanceWithOwner(Microsoft::UI::Xaml::Controls::TreeViewList const& owner, Windows::Foundation::IInspectable const& baseInterface, Windows::Foundation::IInspectable& innerInterface) const;
};
template <> struct consume<Microsoft::UI::Xaml::Automation::Peers::ITreeViewListAutomationPeerFactory> { template <typename D> using type = consume_Microsoft_UI_Xaml_Automation_Peers_ITreeViewListAutomationPeerFactory<D>; };

}
